import 'package:flutter/material.dart';

class LessonPage extends StatelessWidget {
  const LessonPage({super.key});

  @override
  Widget build(BuildContext context) {
    return DefaultTabController(
      length: 3,
      child: Scaffold(
        appBar: AppBar(
          title: const Text('ЁЯУЪ Language Lessons'),
          bottom: const TabBar(
            tabs: [
              Tab(text: 'родрооро┐ро┤рпН'),
              Tab(text: 'English'),
              Tab(text: 'рд╣рд┐рдиреНрджреА'),
            ],
          ),
        ),
        body: const TabBarView(
          children: [
            LanguageTab(color: Colors.pinkAccent, language: 'Tamil'),
            LanguageTab(color: Colors.lightBlue, language: 'English'),
            LanguageTab(color: Colors.orangeAccent, language: 'Hindi'),
          ],
        ),
      ),
    );
  }
}

class LanguageTab extends StatelessWidget {
  final Color color;
  final String language;

  const LanguageTab({
    super.key,
    required this.color,
    required this.language,
  });

  @override
  Widget build(BuildContext context) {
    return AnimatedContainer(
      duration: const Duration(milliseconds: 500),
      color: color.withOpacity(0.1),
      padding: const EdgeInsets.all(16.0),
      child: ListView(
        children: [
          TopicCard(title: 'Greetings', phrases: _getGreetings(language), color: color),
          TopicCard(title: 'Numbers (1-10)', phrases: _getNumbers(language), color: color),
          TopicCard(title: 'Basic Phrases', phrases: _getBasicPhrases(language), color: color),
        ],
      ),
    );
  }
}

class TopicCard extends StatelessWidget {
  final String title;
  final List<String> phrases;
  final Color color;

  const TopicCard({
    super.key,
    required this.title,
    required this.phrases,
    required this.color,
  });

  @override
  Widget build(BuildContext context) {
    return Card(
      color: color.withOpacity(0.2),
      margin: const EdgeInsets.symmetric(vertical: 10),
      elevation: 4,
      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(16)),
      child: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text(title,
                style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold, color: color)),
            const SizedBox(height: 10),
            ...phrases.map((phrase) => Text('тАв $phrase', style: const TextStyle(fontSize: 16))),
          ],
        ),
      ),
    );
  }
}

// === Phrase Data ===

List<String> _getGreetings(String lang) {
  switch (lang) {
    case 'Tamil':
      return ['роХро╛ро▓рпИ ро╡рогроХрпНроХроорпН', 'роородро┐роп ро╡рогроХрпНроХроорпН', 'рооро╛ро▓рпИ ро╡рогроХрпНроХроорпН'];
    case 'English':
      return ['Good Morning', 'Good Afternoon', 'Good Evening'];
    case 'Hindi':
      return ['рд╕реБрдкреНрд░рднрд╛рдд', 'рдирдорд╕реНрдХрд╛рд░ (рджреЛрдкрд╣рд░)', 'рд╢реБрдн рд╕рдВрдзреНрдпрд╛'];
    default:
      return [];
  }
}

List<String> _getNumbers(String lang) {
  switch (lang) {
    case 'Tamil':
      return ['роТройрпНро▒рпБ', 'роЗро░рогрпНроЯрпБ', 'роорпВройрпНро▒рпБ', 'роиро╛ройрпНроХрпБ', 'роРроирпНродрпБ', 'роЖро▒рпБ', 'роПро┤рпБ', 'роОроЯрпНроЯрпБ', 'роТройрпНрокродрпБ', 'рокродрпНродрпБ'];
    case 'English':
      return ['One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine', 'Ten'];
    case 'Hindi':
      return ['рдПрдХ', 'рджреЛ', 'рддреАрди', 'рдЪрд╛рд░', 'рдкрд╛рдБрдЪ', 'рдЫрд╣', 'рд╕рд╛рдд', 'рдЖрда', 'рдиреМ', 'рджрд╕'];
    default:
      return [];
  }
}

List<String> _getBasicPhrases(String lang) {
  switch (lang) {
    case 'Tamil':
      return ['роОрокрпНрокроЯро┐ роЗро░рпБроХрпНроХро┐ро▒рпАро░рпНроХро│рпН?', 'роиро╛ройрпН роиро▓рооро╛роХ роЗро░рпБроХрпНроХро┐ро▒рпЗройрпН', 'роЙроЩрпНроХро│рпН рокрпЖропро░рпН роОройрпНрой?', 'роОройрпН рокрпЖропро░рпН ___', 'роиройрпНро▒ро┐', 'рооройрпНройро┐роХрпНроХро╡рпБроорпН', 'рокро┐ро░ро┐ропро╛ро╡ро┐роЯрпИ'];
    case 'English':
      return ['How are you?', 'I am fine', 'What is your name?', 'My name is ___', 'Thank you', 'Sorry', 'Goodbye'];
    case 'Hindi':
      return ['рдЖрдк рдХреИрд╕реЗ рд╣реИрдВ?', 'рдореИрдВ рдареАрдХ рд╣реВрдБ', 'рдЖрдкрдХрд╛ рдирд╛рдо рдХреНрдпрд╛ рд╣реИ?', 'рдореЗрд░рд╛ рдирд╛рдо ___ рд╣реИ', 'рдзрдиреНрдпрд╡рд╛рдж', 'рдорд╛рдлрд╝ рдХреАрдЬрд┐рдП', 'рдЕрд▓рд╡рд┐рджрд╛'];
    default:
      return [];
  }
}
